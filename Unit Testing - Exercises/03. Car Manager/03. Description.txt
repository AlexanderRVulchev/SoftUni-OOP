You are provided with a simple project containing only one class - "Car". The provided class is simple - its main point is to represent some of the functionality of a car. Each car contains information about its Make, Model, Fuel Consumption, Fuel Amount, and Fuel Capacity. Also, each car can add some fuel to its tank by refueling and can travel distance by driving. To be driven, our car needs to have enough fuel. Everything in the provided skeleton is working perfectly fine and you mustn't change it.
In the skeleton, you are provided Test Project named "CarManager.Tests". There you should place all the unit tests you write. The Test Project has only one class inside:
•	"CarTests" - here you should place all code testing the "Car" and its functionality.
Your job now is to write unit tests on the provided project and its functionality.
 You should test exactly every part of the code inside the "Car" class:
•	You should test all the constructors
•	You should test all properties (getters and setters)
•	You should test all the methods and validations inside the class
Before you submit your solution to Judge, you should remove all the references and namespaces referencing the other project. 
You should upload only the "CarManager.Tests" project holding the class with your tests. 
Remove the "bin" and "obj" folders before submission.
Constraints
•	Everything in the provided skeleton is working perfectly fine
•	You mustn't change anything in the project structure
•	You can test both constructors together
•	You shouldn't test the auto-properties
•	Any part of validation should be tested
•	There is no limit on the tests you will write but keep your attention on the main functionality
